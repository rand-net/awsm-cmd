AWESOME_JSON_REPO="Awesome.json"
BROWSER="chromium"

#  UPDATE REPO
# ===================

update_json_repo(){
    cd "$AWESOME_JSON_REPO"
    git submodule update --remote --merge
}

#  SEARCH REPO
# ===================

search_json_repo(){

    cd "$AWESOME_JSON_REPO/repo-json/"
# Get Topic filename
        TOPIC=$(for f in *; do [ -f "$f" ] && echo "$f"; done  | rofi -i -dmenu -m -2 -fullscreen -p "TOPIC:" -normal-window)

# Prefix Topic Filename Full Path
        TOPIC_PATH="$AWESOME_JSON_REPO/repo-json/""$TOPIC"

# Get App Name
        cd ../..
        PROJECT_NAME=$(jq -r '.[] | .name + " => (" + .description + ")"'  "$TOPIC_PATH" | rofi -i -dmenu -fullscreen  -p "PROJECT:" -normal-window)


# Remove Description form app names
        CLEANED_PROJECT_NAME=$(echo $PROJECT_NAME | sed -E "s/=>.*$//g")
        FINAL_PROJECT_NAME=$(echo "$CLEANED_PROJECT_NAME"| sed 's/"//g; s/\ //g' ) #Clean whitespace

# Open App URL
        PROJECT_URL=$(jq -r --arg FINAL_PROJECT_NAME "$FINAL_PROJECT_NAME" '.[] | select(.name==$FINAL_PROJECT_NAME) | .url '  "$TOPIC_PATH")

#Return Value
        echo $PROJECT_URL
}

# USAGE - CMD OPTIONS
# ====================

usage(){
    echo "Usage: "
        echo "Rofi - Awesome List"
        echo -e "\t -b  Browser to open the URL"
        echo -e "\t -s  Search awesome list"
        echo -e "\t -u  Update awesome list repository"
        echo -e "\t -h  help"
        exit 2
}

while getopts 'b:suh' c
do
    case $c in
    b) CUSTOM_BROWSER=$OPTARG;;
    s) ;;
    u) update_json_repo;;
    h) usage ;;
    esac
done
shift $((OPTIND-1))

# CHECK FOR CUSTOM BROWSER
# ========================
if [[ -n "$CUSTOM_BROWSER" ]]
then
    URL="$(search_json_repo)"
    setsid -f   $CUSTOM_BROWSER $URL >/dev/null 2>&1
else
    URL="$(search_json_repo)"
    setsid -f   $BROWSER $URL >/dev/null 2>&1
fi
